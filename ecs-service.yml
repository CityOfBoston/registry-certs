Description: Webapp for Registry certificate purchasing (e.g. Death Certificates)

Parameters:
  Repository:
    Type: String
  Tag:
    Type: String
    Default: latest
  Cluster:
    Type: String
  ServiceDesiredCount:
    Type: Number
  TaskRoleArn:
    Type: String
  ServiceRoleArn:
    Type: String
  TargetGroupArn:
    Type: String
  ConfigBucketPath:
    Type: String
    Description: Bucket + path for this serviceâ€™s configuration. (E.g. digital-apps-config/311-indexer)
  CloudFrontHost:
    Type: String
    Description: Host name for our CloudFront reverse proxy for this service

Resources:
  # Separate logs for each app
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/${Cluster}/${AWS::StackName}'
      RetentionInDays: 90

  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref 'AWS::StackName'
      TaskRoleArn: !Ref TaskRoleArn
      ContainerDefinitions:
        - Name: service
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:${Tag}'
          Essential: true
          PortMappings:
            - ContainerPort: 3000
          Memory: 500
          MemoryReservation: 200
          Environment:
            - Name: NODE_ENV
              Value: production
            - Name: AWS_S3_CONFIG_URL
              Value: !Sub 's3://${ConfigBucketPath}'
            - Name: AWS_REGION
              Value: !Ref 'AWS::Region'
            - Name: CLOUDFRONT_HOST
              Value: !Ref CloudFrontHost
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref 'AWS::Region'
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs

  Service:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: !Ref 'AWS::StackName'
      Cluster: !Ref Cluster
      DesiredCount: !Ref ServiceDesiredCount
      TaskDefinition: !Ref TaskDefinition
      Role: !Ref ServiceRoleArn
      LoadBalancers:
        # Must match a ContainerDefinition above
        - ContainerName: service
          ContainerPort: 3000
          TargetGroupArn: !Ref TargetGroupArn